golangci-lint run -v -c .golangci.gocritic.yaml testdata-gocritic
testdata-gocritic/appendassign.go:9:8: appendAssign: append result not assigned to the same slice (gocritic)
testdata-gocritic/appendassign.go:10:8: appendAssign: append result not assigned to the same slice (gocritic)
testdata-gocritic/appendcombine.go:8:2: appendCombine: can combine chain of 2 appends into one (gocritic)
testdata-gocritic/assignop.go:6:2: assignOp: replace `n = n * 2` with `n *= 2` (gocritic)
testdata-gocritic/badcall.go:8:38: badCall: suspicious arg 0, probably meant -1 (gocritic)
testdata-gocritic/badcond.go:6:2: badCond: `i > n` in loop; probably meant `i < n`? (gocritic)
testdata-gocritic/badregexp.go:5:29: badRegexp: ^ applied only to `aa` in ^aa|bb|cc (gocritic)
testdata-gocritic/badregexp.go:5:29: badRegexp: `a` is duplicated in [aba] (gocritic)
testdata-gocritic/boolexprsimplify.go:6:7: boolExprSimplify: can simplify `!(max >= min)` to `max < min` (gocritic)
testdata-gocritic/boolexprsimplify.go:7:7: boolExprSimplify: can simplify `!(x) == !(y)` to `(x) == (y)` (gocritic)
testdata-gocritic/builtinshadow.go:6:2: builtinShadow: shadowing of predeclared identifier: len (gocritic)
testdata-gocritic/builtinshadowdecl.go:3:6: builtinShadowDecl: shadowing of predeclared identifier: int8 (gocritic)
testdata-gocritic/captlocal.go:5:8: captLocal: `IN' should not be capitalized (gocritic)
testdata-gocritic/captlocal.go:5:16: captLocal: `OUT' should not be capitalized (gocritic)
testdata-gocritic/captlocal.go:5:27: captLocal: `ERR' should not be capitalized (gocritic)
testdata-gocritic/caseorder.go:14:2: caseOrder: case *ast.BasicLit must go before the ast.Expr case (gocritic)
testdata-gocritic/commentedoutcode.go:6:2: commentedOutCode: may want to remove commented-out code (gocritic)
testdata-gocritic/commentedoutimport.go:7:2: commentedOutImport: remove commented-out "os" import (gocritic)
testdata-gocritic/commentformatting.go:3:1: commentFormatting: put a space between `//` and comment text (gocritic)
testdata-gocritic/defaultcaseorder.go:9:2: defaultCaseOrder: consider to make `default` case as first or as last case (gocritic)
testdata-gocritic/deferunlambda.go:6:2: deferUnlambda: can rewrite as `defer fExample10()` (gocritic)
testdata-gocritic/deferunlambda.go:6:2: unnecessaryDefer: defer func(){...}(...) is placed just before return (gocritic)
testdata-gocritic/docstub.go:6:1: docStub: silencing go lint doc-comment warnings is unadvised (gocritic)
testdata-gocritic/duparg.go:9:2: dupArg: suspicious duplicated args in copy(dst, dst) (gocritic)
testdata-gocritic/dupbranchbody.go:6:2: dupBranchBody: both branches in if statement has same body (gocritic)
testdata-gocritic/dupcase.go:8:28: dupCase: 'case ys[0]' is duplicated (gocritic)
testdata-gocritic/dupimport.go:6:2: dupImport: package is imported 2 times under different aliases on lines 6 and 7 (gocritic)
testdata-gocritic/dupimport.go:7:2: dupImport: package is imported 2 times under different aliases on lines 6 and 7 (gocritic)
testdata-gocritic/dupsubexpr.go:8:9: dupSubExpr: suspicious identical LHS and RHS for `>` operator (gocritic)
testdata-gocritic/emptyfallthrough.go:10:3: emptyFallthrough: replace empty case containing only fallthrough with expression list (gocritic)
testdata-gocritic/equalfold.go:8:9: equalFold: consider replacing with strings.EqualFold(x, y) (gocritic)
testdata-gocritic/evalorder.go:10:12: evalOrder: may want to evaluate f1(&n) before the return statement (gocritic)
testdata-gocritic/exitafterdefer.go:14:3: exitAfterDefer: log.Fatalf will exit, and `defer os.Remove(name)` will not run (gocritic)
testdata-gocritic/exposedsyncmutex.go:5:1: exposedSyncMutex: don't embed sync.Mutex (gocritic)
testdata-gocritic/externalerrorreassign.go:6:2: externalErrorReassign: suspicious reassigment of error from another package (gocritic)
testdata-gocritic/filepathjoin.go:6:20: filepathJoin: "dir/" contains a path separator (gocritic)
testdata-gocritic/flagderef.go:8:6: flagDeref: immediate deref in *flag.Bool("b", false, "b docs") is most likely an error; consider using flag.BoolVar (gocritic)
testdata-gocritic/flagname.go:8:6: flagName: flag name " foo " contains whitespace (gocritic)
testdata-gocritic/hexliteral.go:7:7: hexLiteral: don't mix hex literal letter digits casing (gocritic)
testdata-gocritic/httpnobody.go:9:2: httpNoBody: http.NoBody should be preferred to the nil request body (gocritic)
testdata-gocritic/hugeparam.go:5:8: hugeParam: x is heavy (8192 bytes); consider passing it by pointer (gocritic)
testdata-gocritic/ifelsechain.go:6:2: ifElseChain: rewrite if-else to switch statement (gocritic)
testdata-gocritic/importshadow.go:13:2: importShadow: shadow of imported package 'filepath' (gocritic)
testdata-gocritic/indexalloc.go:8:2: indexAlloc: consider replacing strings.Index(string(x), y) with bytes.Index(x, []byte(y)) (gocritic)
testdata-gocritic/initclause.go:6:2: initClause: consider to move `sideEffect()` before if (gocritic)
testdata-gocritic/ioutildeprecated.go:9:10: ioutilDeprecated: ioutil.ReadAll is deprecated, use io.ReadAll instead (gocritic)
testdata-gocritic/methodexprcall.go:11:2: methodExprCall: consider to change `foobar.bar` to `f.bar` (gocritic)
testdata-gocritic/newderef.go:6:7: newDeref: replace `*new(bool)` with `false` (gocritic)
testdata-gocritic/nilvalreturn.go:12:3: nilValReturn: returned expr is always nil; replace err with nil (gocritic)
testdata-gocritic/octalliteral.go:6:5: octalLiteral: use new octal literal style, 0o2 (gocritic)
testdata-gocritic/offby1.go:7:9: offBy1: index expr always panics; maybe you wanted xs[len(xs)-1]? (gocritic)
testdata-gocritic/paramtypecombine.go:5:1: paramTypeCombine: func(a, b int, c, d int, e, f int, g int) could be replaced with func(a, b, c, d, e, f, g int) (gocritic)
testdata-gocritic/preferdecoderune.go:6:6: preferDecodeRune: consider replacing []rune(s)[0] with utf8.DecodeRuneInString(s) (gocritic)
testdata-gocritic/preferfilepathjoin.go:8:7: preferFilepathJoin: filepath.Join(x, y) should be preferred to the x + string(os.PathSeparator) + y (gocritic)
testdata-gocritic/preferfprint.go:9:2: preferFprint: fmt.Fprintf(w, "%x", 10) should be preferred to the w.Write([]byte(fmt.Sprintf("%x", 10))) (gocritic)
testdata-gocritic/ptrtorefparam.go:5:8: ptrToRefParam: consider `m' to be of non-pointer type (gocritic)
testdata-gocritic/ptrtorefparam.go:5:27: ptrToRefParam: consider to make non-pointer type for `*chan *int` (gocritic)
testdata-gocritic/rangeexprcopy.go:7:2: rangeExprCopy: copy of xs (2048 bytes) can be avoided with &xs (gocritic)
testdata-gocritic/rangevalcopy.go:7:2: rangeValCopy: each iteration copies 1024 bytes (consider pointers or indexing) (gocritic)
testdata-gocritic/redundantsprint.go:9:14: redundantSprint: use x.String() instead (gocritic)
testdata-gocritic/regexpmust.go:8:11: regexpMust: for const patterns like "const pattern", use regexp.MustCompile (gocritic)
testdata-gocritic/regexppattern.go:8:27: regexpPattern: '.com' should probably be '\.com' (gocritic)
testdata-gocritic/regexpsimplify.go:5:37: regexpSimplify: can re-write `(?:a|b|c)   [a-z][a-z]*` as `[abc] {3}[a-z]+` (gocritic)
testdata-gocritic/singlecaseswitch.go:6:2: singleCaseSwitch: should rewrite switch statement to if statement (gocritic)
testdata-gocritic/sliceclear.go:4:2: sliceClear: rewrite as for-range so compiler can recognize this pattern (gocritic)
testdata-gocritic/sloppylen.go:6:8: sloppyLen: len(arr) >= 0 is always true (gocritic)
testdata-gocritic/sloppylen.go:7:8: sloppyLen: len(arr) <= 0 can be len(arr) == 0 (gocritic)
testdata-gocritic/sloppylen.go:8:8: sloppyLen: len(arr) < 0 is always false (gocritic)
testdata-gocritic/sloppyreassign.go:7:5: sloppyReassign: re-assignment to `err` can be replaced with `err := func() error { return nil }()` (gocritic)
testdata-gocritic/sortslice.go:8:46: sortSlice: cmp func must use xs slice in comparison (gocritic)
testdata-gocritic/sprintfquotedstring.go:5:9: sprintfQuotedString: use %q instead of "%s" for quoted strings (gocritic)
testdata-gocritic/stringconcatsimplify.go:7:11: stringConcatSimplify: suggestion: x1 + "_" + y1 (gocritic)
testdata-gocritic/stringxbytes.go:7:2: stringXbytes: can simplify `[]byte(s)` to `s` (gocritic)
testdata-gocritic/suspicioussorting.go:10:2: badSorting: suspicious sort.StringSlice usage, maybe sort.Strings was intended? (gocritic)
testdata-gocritic/switchtrue.go:6:2: singleCaseSwitch: should rewrite switch statement to if statement (gocritic)
testdata-gocritic/switchtrue.go:6:2: switchTrue: replace 'switch true {}' with 'switch {}' (gocritic)
testdata-gocritic/timeexprsimplify.go:5:9: timeExprSimplify: use time.Now().UnixMilli() instead of time.Now().Unix() / 1000 (gocritic)
testdata-gocritic/truncatecmp.go:6:9: truncateCmp: truncation in comparison 32->16 bit; cast the other operand to int32 instead (gocritic)
testdata-gocritic/typeassertchain.go:13:2: typeAssertChain: rewrite if-else to type switch statement (gocritic)
testdata-gocritic/typedeffirst.go:5:1: typeDefFirst: definition of type 'rec' should appear before its methods (gocritic)
testdata-gocritic/typeswitchvar.go:13:2: typeSwitchVar: 2 cases can benefit from type switch with assignment (gocritic)
testdata-gocritic/typeunparen.go:5:9: typeUnparen: could simplify [](func([](func()))) to []func([]func()) (gocritic)
testdata-gocritic/underef.go:12:2: underef: could simplify (*k).field to k.field (gocritic)
testdata-gocritic/unlabelstmt.go:6:1: unlabelStmt: label derp is redundant (gocritic)
testdata-gocritic/unlambda.go:6:9: unlambda: replace `func(x int) int { return f8(x) }` with `f8` (gocritic)
testdata-gocritic/unnamedresult.go:7:1: unnamedResult: consider giving a name to these results (gocritic)
testdata-gocritic/unnecessaryblock.go:6:2: unnecessaryBlock: block doesn't have definitions, can be simply deleted (gocritic)
testdata-gocritic/unnecessarydefer.go:6:2: unnecessaryDefer: defer os.Remove(name) is placed just before return (gocritic)
testdata-gocritic/unslice.go:6:5: unslice: could simplify s[:] to s (gocritic)
testdata-gocritic/valswap.go:6:2: valSwap: can re-write as `*x, *y = *y, *x` (gocritic)
testdata-gocritic/weakcond.go:6:9: weakCond: suspicious `xs != nil && xs[0] != nil`; nil check may not be enough, check for len (gocritic)
testdata-gocritic/wrapperfunc.go:15:9: wrapperFunc: use WaitGroup.Done method in `wg.Add(-1)` (gocritic)
testdata-gocritic/yodastyleexpr.go:9:9: yodaStyleExpr: consider to change order in expression to ptr != nil (gocritic)
