golangci-lint run -c .golangci.revive.yaml testdata-revive
testdata-revive/add-constant.go:4:1: cyclomatic: function foo has cyclomatic complexity 4 (revive)
testdata-revive/add-constant.go:4:1: argument-limit: maximum number of arguments per function exceeded; max 3 but got 4 (revive)
testdata-revive/add-constant.go:4:1: cognitive-complexity: function foo has cognitive complexity 5 (> max enabled 2) (revive)
testdata-revive/add-constant.go:5:2: modifies-parameter: parameter 'a' seems to be modified (revive)
testdata-revive/add-constant.go:6:2: modifies-parameter: parameter 'b' seems to be modified (revive)
testdata-revive/add-constant.go:7:2: modifies-parameter: parameter 'c' seems to be modified (revive)
testdata-revive/add-constant.go:8: line-length-limit: line is 95 characters, out of limit 80 (revive)
testdata-revive/add-constant.go:8:17: add-constant: avoid magic numbers like '12', create a named constant for it (revive)
testdata-revive/add-constant.go:9:10: add-constant: avoid magic numbers like '12.50', create a named constant for it (revive)
testdata-revive/add-constant.go:9: line-length-limit: line is 98 characters, out of limit 80 (revive)
testdata-revive/add-constant.go:11:4: modifies-parameter: parameter 'd' seems to be modified (revive)
testdata-revive/add-constant.go:11: line-length-limit: line is 112 characters, out of limit 80 (revive)
testdata-revive/add-constant.go:14:12: add-constant: string literal "lit" appears, at least, 4 times, create a named constant for it (revive)
testdata-revive/argument-limit.go:4:6: var-naming: don't use underscores in Go names; func foobar_arglim should be foobarArglim (revive)
testdata-revive/argument-limit.go:4:29: unused-parameter: parameter 'd' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/argument-limit.go:4: line-length-limit: line is 114 characters, out of limit 80 (revive)
testdata-revive/argument-limit.go:4:1: argument-limit: maximum number of arguments per function exceeded; max 3 but got 4 (revive)
testdata-revive/argument-limit.go:7:6: var-naming: don't use underscores in Go names; func bar_arglim should be barArglim (revive)
testdata-revive/argument-limit.go:10:6: var-naming: don't use underscores in Go names; func baz_arglim should be bazArglim (revive)
testdata-revive/argument-limit.go:13: line-length-limit: line is 131 characters, out of limit 80 (revive)
testdata-revive/argument-limit.go:13:1: argument-limit: maximum number of arguments per function exceeded; max 3 but got 5 (revive)
testdata-revive/argument-limit.go:13:34: unused-parameter: parameter 'd' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/argument-limit.go:13:44: unused-parameter: parameter 'e' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/atomic.go:10:1: function-length: maximum number of statements per function exceeded; max 10 but got 20 (revive)
testdata-revive/atomic.go:12: line-length-limit: line is 83 characters, out of limit 80 (revive)
testdata-revive/atomic.go:12:2: atomic: direct assignment to atomic value (revive)
testdata-revive/atomic.go:13:2: atomic: direct assignment to atomic value (revive)
testdata-revive/atomic.go:13: line-length-limit: line is 83 characters, out of limit 80 (revive)
testdata-revive/atomic.go:13:9: add-constant: avoid magic numbers like '10', create a named constant for it (revive)
testdata-revive/atomic.go:14: line-length-limit: line is 83 characters, out of limit 80 (revive)
testdata-revive/atomic.go:14:2: atomic: direct assignment to atomic value (revive)
testdata-revive/atomic.go:14:34: add-constant: avoid magic numbers like '10', create a named constant for it (revive)
testdata-revive/atomic.go:20: line-length-limit: line is 94 characters, out of limit 80 (revive)
testdata-revive/atomic.go:25: line-length-limit: line is 94 characters, out of limit 80 (revive)
testdata-revive/atomic.go:29:17: add-constant: avoid magic numbers like '10', create a named constant for it (revive)
testdata-revive/atomic.go:29:21: add-constant: avoid magic numbers like '20', create a named constant for it (revive)
testdata-revive/atomic.go:30: line-length-limit: line is 84 characters, out of limit 80 (revive)
testdata-revive/atomic.go:34: line-length-limit: line is 84 characters, out of limit 80 (revive)
testdata-revive/atomic.go:40:20: unused-parameter: parameter 'addr' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/atomic.go:40:34: unused-parameter: parameter 'delta' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/atomic.go:44:6: import-shadowing: The name 'atomic' shadows an import name (revive)
testdata-revive/bare-return.go:4:1: function-result-limit: maximum number of return results per function exceeded; max 2 but got 3 (revive)
testdata-revive/bare-return.go:4:1: confusing-results: unnamed results of the same type may be confusing, consider using named results (revive)
testdata-revive/bare-return.go:6: line-length-limit: line is 81 characters, out of limit 80 (revive)
testdata-revive/bare-return.go:6:3: bare-return: avoid using bare returns, please add return expressions (revive)
testdata-revive/bare-return.go:7:4: add-constant: avoid magic numbers like '5', create a named constant for it (revive)
testdata-revive/bare-return.go:10:1: function-result-limit: maximum number of return results per function exceeded; max 2 but got 3 (revive)
testdata-revive/bare-return.go:10:1: error-return: error should be the last type when returning multiple items (revive)
testdata-revive/bare-return.go:12:3: bare-return: avoid using bare returns, please add return expressions (revive)
testdata-revive/bare-return.go:12: line-length-limit: line is 81 characters, out of limit 80 (revive)
testdata-revive/bare-return.go:13:4: add-constant: avoid magic numbers like '5', create a named constant for it (revive)
testdata-revive/bare-return.go:16:1: function-result-limit: maximum number of return results per function exceeded; max 2 but got 4 (revive)
testdata-revive/bare-return.go:19:4: add-constant: avoid magic numbers like '5', create a named constant for it (revive)
testdata-revive/bare-return.go:19:7: add-constant: avoid magic numbers like '6', create a named constant for it (revive)
testdata-revive/bare-return.go:22:3: defer: return in a defer function has no effect (revive)
testdata-revive/bare-return.go:64: line-length-limit: line is 85 characters, out of limit 80 (revive)
testdata-revive/blank-imports.go:5:2: blank-imports: a blank import should be only in a main or test package, or have a comment justifying it (revive)
testdata-revive/bool-literal-in-expr.go:6:1: cognitive-complexity: function foo has cognitive complexity 3 (> max enabled 2) (revive)
testdata-revive/bool-literal-in-expr.go:6:1: cyclomatic: function foo has cyclomatic complexity 4 (revive)
testdata-revive/bool-literal-in-expr.go:9:5: bool-literal-in-expr: omit Boolean literal in expression (revive)
testdata-revive/bool-literal-in-expr.go:29:1: cyclomatic: function resolve has cyclomatic complexity 4 (revive)
testdata-revive/bool-literal-in-expr.go:29:1: cognitive-complexity: function resolve has cognitive complexity 4 (> max enabled 2) (revive)
testdata-revive/bool-literal-in-expr.go:29:14: unused-parameter: parameter 'tag' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/bool-literal-in-expr.go:29:26: unused-parameter: parameter 'in' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/bool-literal-in-expr.go:31:6: bool-literal-in-expr: Boolean expression seems to always evaluate to true (revive)
testdata-revive/bool-literal-in-expr.go:31: line-length-limit: line is 108 characters, out of limit 80 (revive)
testdata-revive/bool-literal-in-expr.go:33:10: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)
testdata-revive/bool-literal-in-expr.go:40:1: argument-limit: maximum number of arguments per function exceeded; max 3 but got 5 (revive)
testdata-revive/bool-literal-in-expr.go:40:1: cognitive-complexity: function packDataDomainNames has cognitive complexity 4 (> max enabled 2) (revive)
testdata-revive/bool-literal-in-expr.go:40:1: cyclomatic: function packDataDomainNames has cyclomatic complexity 4 (revive)
testdata-revive/bool-literal-in-expr.go:40: line-length-limit: line is 119 characters, out of limit 80 (revive)
testdata-revive/bool-literal-in-expr.go:43:3: modifies-parameter: parameter 'off' seems to be modified (revive)
testdata-revive/bool-literal-in-expr.go:43: line-length-limit: line is 149 characters, out of limit 80 (revive)
testdata-revive/bool-literal-in-expr.go:43:62: bool-literal-in-expr: Boolean expression seems to always evaluate to false (revive)
testdata-revive/call-to-gc.go:16:2: call-to-gc: explicit call to the garbage collector (revive)
testdata-revive/cognitive-complexity.go:15:1: cognitive-complexity: function f has cognitive complexity 3 (> max enabled 2) (revive)
testdata-revive/cognitive-complexity.go:15:1: cyclomatic: function f has cyclomatic complexity 4 (revive)
testdata-revive/cognitive-complexity.go:25: line-length-limit: line is 97 characters, out of limit 80 (revive)
testdata-revive/cognitive-complexity.go:28:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary) (revive)
testdata-revive/cognitive-complexity.go:34: line-length-limit: line is 103 characters, out of limit 80 (revive)
testdata-revive/cognitive-complexity.go:34:1: argument-limit: maximum number of arguments per function exceeded; max 3 but got 6 (revive)
testdata-revive/cognitive-complexity.go:34:1: cyclomatic: function h has cyclomatic complexity 6 (revive)
testdata-revive/cognitive-complexity.go:34:1: cognitive-complexity: function h has cognitive complexity 3 (> max enabled 2) (revive)
testdata-revive/cognitive-complexity.go:38: line-length-limit: line is 103 characters, out of limit 80 (revive)
testdata-revive/cognitive-complexity.go:38:1: argument-limit: maximum number of arguments per function exceeded; max 3 but got 6 (revive)
testdata-revive/cognitive-complexity.go:38:1: cyclomatic: function i has cyclomatic complexity 5 (revive)
testdata-revive/cognitive-complexity.go:43: line-length-limit: line is 103 characters, out of limit 80 (revive)
testdata-revive/cognitive-complexity.go:43:1: argument-limit: maximum number of arguments per function exceeded; max 3 but got 6 (revive)
testdata-revive/cognitive-complexity.go:43:20: unused-parameter: parameter 'e' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/cognitive-complexity.go:53:1: cyclomatic: function k has cyclomatic complexity 4 (revive)
testdata-revive/cognitive-complexity.go:64:1: cyclomatic: function l has cyclomatic complexity 4 (revive)
testdata-revive/cognitive-complexity.go:64:1: cognitive-complexity: function l has cognitive complexity 6 (> max enabled 2) (revive)
testdata-revive/cognitive-complexity.go:78:1: cyclomatic: function m has cyclomatic complexity 4 (revive)
testdata-revive/cognitive-complexity.go:78:1: cognitive-complexity: function m has cognitive complexity 6 (> max enabled 2) (revive)
testdata-revive/cognitive-complexity.go:92:1: cyclomatic: function n has cyclomatic complexity 4 (revive)
testdata-revive/cognitive-complexity.go:92:1: cognitive-complexity: function n has cognitive complexity 6 (> max enabled 2) (revive)
testdata-revive/cognitive-complexity.go:106:1: cyclomatic: function o has cyclomatic complexity 7 (revive)
testdata-revive/cognitive-complexity.go:106:1: cognitive-complexity: function o has cognitive complexity 12 (> max enabled 2) (revive)
testdata-revive/cognitive-complexity.go:129:1: cyclomatic: function p has cyclomatic complexity 5 (revive)
testdata-revive/cognitive-complexity.go:166:1: cognitive-complexity: function s has cognitive complexity 3 (> max enabled 2) (revive)
testdata-revive/cognitive-complexity.go:183:1: cognitive-complexity: function u has cognitive complexity 3 (> max enabled 2) (revive)
testdata-revive/cognitive-complexity.go:201:6: confusing-naming: Method 'v' differs only by capitalization to function 'v' in the same source file (revive)
testdata-revive/cognitive-complexity.go:205:1: cognitive-complexity: function w has cognitive complexity 3 (> max enabled 2) (revive)
testdata-revive/cognitive-complexity.go:213:1: cyclomatic: function sumOfPrimes has cyclomatic complexity 4 (revive)
testdata-revive/cognitive-complexity.go:213:1: cognitive-complexity: function sumOfPrimes has cognitive complexity 7 (> max enabled 2) (revive)
testdata-revive/cognitive-complexity.go:229: line-length-limit: line is 161 characters, out of limit 80 (revive)
testdata-revive/cognitive-complexity.go:229:1: function-length: maximum number of statements per function exceeded; max 10 but got 31 (revive)
testdata-revive/cognitive-complexity.go:229:1: cyclomatic: function (*Migrator).MigrateIfNeeded has cyclomatic complexity 19 (revive)
testdata-revive/cognitive-complexity.go:229:1: cognitive-complexity: function (*Migrator).MigrateIfNeeded has cognitive complexity 18 (> max enabled 2) (revive)
testdata-revive/cognitive-complexity.go:233: line-length-limit: line is 98 characters, out of limit 80 (revive)
testdata-revive/cognitive-complexity.go:247: line-length-limit: line is 126 characters, out of limit 80 (revive)
testdata-revive/cognitive-complexity.go:254: line-length-limit: line is 128 characters, out of limit 80 (revive)
testdata-revive/cognitive-complexity.go:255: line-length-limit: line is 147 characters, out of limit 80 (revive)
testdata-revive/cognitive-complexity.go:261: line-length-limit: line is 99 characters, out of limit 80 (revive)
testdata-revive/cognitive-complexity.go:262: line-length-limit: line is 95 characters, out of limit 80 (revive)
testdata-revive/cognitive-complexity.go:263:33: add-constant: avoid magic numbers like '3', create a named constant for it (revive)
testdata-revive/cognitive-complexity.go:264: line-length-limit: line is 82 characters, out of limit 80 (revive)
testdata-revive/cognitive-complexity.go:265: line-length-limit: line is 113 characters, out of limit 80 (revive)
testdata-revive/cognitive-complexity.go:269: line-length-limit: line is 123 characters, out of limit 80 (revive)
testdata-revive/cognitive-complexity.go:269:33: add-constant: avoid magic numbers like '3', create a named constant for it (revive)
testdata-revive/confusing-naming.go:7:2: unnecessary-stmt: omit unnecessary return statement (revive)
testdata-revive/confusing-naming.go:10:15: confusing-naming: Method 'AFoo' differs only by capitalization to method 'aFoo' in the same source file (revive)
testdata-revive/confusing-naming.go:10: line-length-limit: line is 119 characters, out of limit 80 (revive)
testdata-revive/confusing-naming.go:11:2: unnecessary-stmt: omit unnecessary return statement (revive)
testdata-revive/confusing-naming.go:27: line-length-limit: line is 121 characters, out of limit 80 (revive)
testdata-revive/confusing-naming.go:27:6: confusing-naming: Method 'AGlobal' differs only by capitalization to function 'aGlobal' in the same source file (revive)
testdata-revive/confusing-naming.go:30:6: confusing-naming: Method 'aglobal' differs only by capitalization to function 'aGlobal' in the same source file (revive)
testdata-revive/confusing-naming.go:30: line-length-limit: line is 115 characters, out of limit 80 (revive)
testdata-revive/confusing-naming.go:43:14: confusing-naming: Method 'ABar' differs only by capitalization to method 'aBar' in the same source file (revive)
testdata-revive/confusing-naming.go:43: line-length-limit: line is 118 characters, out of limit 80 (revive)
testdata-revive/confusing-naming.go:51:2: confusing-naming: Field 'aSd' differs only by capitalization to other field in the struct type tFoo (revive)
testdata-revive/confusing-naming.go:51: line-length-limit: line is 110 characters, out of limit 80 (revive)
testdata-revive/confusing-naming.go:52: line-length-limit: line is 110 characters, out of limit 80 (revive)
testdata-revive/confusing-naming.go:52:7: confusing-naming: Field 'asD' differs only by capitalization to other field in the struct type tFoo (revive)
testdata-revive/confusing-results.go:4:1: function-result-limit: maximum number of return results per function exceeded; max 2 but got 3 (revive)
testdata-revive/confusing-results.go:4: line-length-limit: line is 124 characters, out of limit 80 (revive)
testdata-revive/confusing-results.go:4:1: confusing-results: unnamed results of the same type may be confusing, consider using named results (revive)
testdata-revive/confusing-results.go:7:1: error-return: error should be the last type when returning multiple items (revive)
testdata-revive/confusing-results.go:10:1: function-result-limit: maximum number of return results per function exceeded; max 2 but got 4 (revive)
testdata-revive/confusing-results.go:10: line-length-limit: line is 152 characters, out of limit 80 (revive)
testdata-revive/confusing-results.go:16:1: get-return: function 'GetTaz' seems to be a getter but it does not return any result (revive)
testdata-revive/confusing-results.go:16:7: unused-receiver: method receiver 't' is not referenced in method's body, consider removing or renaming it as _ (revive)
testdata-revive/constant-logical-expr.go:7: line-length-limit: line is 92 characters, out of limit 80 (revive)
testdata-revive/constant-logical-expr.go:7:37: constant-logical-expr: expression always evaluates to false (revive)
testdata-revive/constant-logical-expr.go:11:11: unused-parameter: parameter 'f' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/constant-logical-expr.go:11:36: constant-logical-expr: expression always evaluates to false (revive)
testdata-revive/constant-logical-expr.go:11: line-length-limit: line is 104 characters, out of limit 80 (revive)
testdata-revive/constant-logical-expr.go:13: line-length-limit: line is 90 characters, out of limit 80 (revive)
testdata-revive/constant-logical-expr.go:13:36: constant-logical-expr: expression always evaluates to false (revive)
testdata-revive/constant-logical-expr.go:15: line-length-limit: line is 91 characters, out of limit 80 (revive)
testdata-revive/constant-logical-expr.go:19:36: constant-logical-expr: expression always evaluates to true (revive)
testdata-revive/constant-logical-expr.go:19: line-length-limit: line is 90 characters, out of limit 80 (revive)
testdata-revive/constant-logical-expr.go:21:11: unused-parameter: parameter 'f' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/constant-logical-expr.go:21: line-length-limit: line is 150 characters, out of limit 80 (revive)
testdata-revive/constant-logical-expr.go:21:36: constant-logical-expr: expression always evaluates to true (revive)
testdata-revive/constant-logical-expr.go:24: line-length-limit: line is 150 characters, out of limit 80 (revive)
testdata-revive/constant-logical-expr.go:24:9: constant-logical-expr: left and right hand-side sub-expressions are the same (revive)
testdata-revive/constant-logical-expr.go:24:25: add-constant: avoid magic numbers like '10.', create a named constant for it (revive)
testdata-revive/constant-logical-expr.go:24:38: add-constant: avoid magic numbers like '10000', create a named constant for it (revive)
testdata-revive/constant-logical-expr.go:24:64: add-constant: avoid magic numbers like '10.', create a named constant for it (revive)
testdata-revive/constant-logical-expr.go:24:77: add-constant: avoid magic numbers like '10000', create a named constant for it (revive)
testdata-revive/constant-logical-expr.go:28:9: constant-logical-expr: left and right hand-side sub-expressions are the same (revive)
testdata-revive/constant-logical-expr.go:28:38: add-constant: avoid magic numbers like '10000', create a named constant for it (revive)
testdata-revive/constant-logical-expr.go:28: line-length-limit: line is 150 characters, out of limit 80 (revive)
testdata-revive/constant-logical-expr.go:28:25: add-constant: avoid magic numbers like '10.', create a named constant for it (revive)
testdata-revive/context-as-argument.go:6:13: unused-parameter: parameter 'n' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/context-as-argument.go:6:20: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/context-as-argument.go:6:20: context-as-argument: context.Context should be the first parameter of a function (revive)
testdata-revive/context-keys-type.go:7:9: context-keys-type: should not use basic type string as key in context.WithValue (revive)
testdata-revive/cyclomatic.go:6:1: cognitive-complexity: function f has cognitive complexity 3 (> max enabled 2) (revive)
testdata-revive/cyclomatic.go:6:1: cyclomatic: function f has cyclomatic complexity 4 (revive)
testdata-revive/cyclomatic.go:7:5: bool-literal-in-expr: omit Boolean literal in expression (revive)
testdata-revive/cyclomatic.go:7:5: bool-literal-in-expr: omit Boolean literal in expression (revive)
testdata-revive/cyclomatic.go:9:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)
testdata-revive/cyclomatic.go:18:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary) (revive)
testdata-revive/deep-exit.go:20:2: deep-exit: calls to log.Fatalf only in main() or init() functions (revive)
testdata-revive/deep-exit.go:28:2: deep-exit: calls to log.Fatal only in main() or init() functions (revive)
testdata-revive/deep-exit.go:33:2: deep-exit: calls to syscall.Exit only in main() or init() functions (revive)
testdata-revive/defer.go:10:1: cognitive-complexity: function deferrer has cognitive complexity 3 (> max enabled 2) (revive)
testdata-revive/defer.go:15:3: defer: prefer not to defer inside loops (revive)
testdata-revive/defer.go:18:8: defer: be careful when deferring calls to methods without pointer receiver (revive)
testdata-revive/defer.go:18: line-length-limit: line is 95 characters, out of limit 80 (revive)
testdata-revive/defer.go:21:3: defer: return in a defer function has no effect (revive)
testdata-revive/defer.go:21: line-length-limit: line is 86 characters, out of limit 80 (revive)
testdata-revive/defer.go:26:2: defer: recover must be called inside a deferred function (revive)
testdata-revive/defer.go:28:8: unconditional-recursion: unconditional recursive call (revive)
testdata-revive/dot-imports.go:5:2: dot-imports: should not use dot imports (revive)
testdata-revive/duplicated-imports.go:5:2: imports-blacklist: should not use the following blacklisted import: "crypto/md5" (revive)
testdata-revive/duplicated-imports.go:6:2: imports-blacklist: should not use the following blacklisted import: "crypto/md5" (revive)
testdata-revive/duplicated-imports.go:6:2: duplicated-imports: Package "crypto/md5" already imported (revive)
testdata-revive/early-return.go:6:1: cognitive-complexity: function earlyRet has cognitive complexity 12 (> max enabled 2) (revive)
testdata-revive/early-return.go:6:1: cyclomatic: function earlyRet has cyclomatic complexity 11 (revive)
testdata-revive/early-return.go:6:1: function-length: maximum number of statements per function exceeded; max 10 but got 27 (revive)
testdata-revive/early-return.go:7: line-length-limit: line is 102 characters, out of limit 80 (revive)
testdata-revive/early-return.go:7:2: early-return: if c {...} else {... return } can be simplified to if !c { ... return } ... (revive)
testdata-revive/early-return.go:15:2: early-return: if c {...} else {... return } can be simplified to if !c { ... return } ... (revive)
testdata-revive/early-return.go:21:2: early-return: if c { } else {... return} can be simplified to if !c { ... return } (revive)
testdata-revive/early-return.go:21: line-length-limit: line is 93 characters, out of limit 80 (revive)
testdata-revive/early-return.go:28:9: early-return: if c { } else {... return} can be simplified to if !c { ... return } (revive)
testdata-revive/early-return.go:35:9: early-return: if c {...} else {... return } can be simplified to if !c { ... return } ... (revive)
testdata-revive/early-return.go:35: line-length-limit: line is 107 characters, out of limit 80 (revive)
testdata-revive/early-return.go:44:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)
testdata-revive/empty-block.go:4:8: unused-parameter: parameter 'f' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/empty-block.go:5:2: empty-block: this block is empty, you can remove it (revive)
testdata-revive/empty-block.go:10:2: empty-block: this block is empty, you can remove it (revive)
testdata-revive/empty-block.go:14:2: empty-block: this block is empty, you can remove it (revive)
testdata-revive/empty-lines.go:8:22: empty-lines: extra empty line at the start of a block (revive)
testdata-revive/empty-lines.go:17:22: empty-lines: extra empty line at the start of a block (revive)
testdata-revive/empty-lines.go:27:22: empty-lines: extra empty line at the start of a block (revive)
testdata-revive/empty-lines.go:82:9: unnecessary-stmt: switch with only one case can be replaced by an if-then (revive)
testdata-revive/empty-lines.go:89:9: unnecessary-stmt: switch with only one case can be replaced by an if-then (revive)
testdata-revive/empty-lines.go:96:9: unnecessary-stmt: switch with only one case can be replaced by an if-then (revive)
testdata-revive/empty-lines.go:114:1: cognitive-complexity: function f18 has cognitive complexity 3 (> max enabled 2) (revive)
testdata-revive/empty-lines.go:114:10: unused-parameter: parameter 'x' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/empty-lines.go:116:3: empty-lines: extra empty line at the end of a block (revive)
testdata-revive/empty-lines.go:135:1: cognitive-complexity: function x has cognitive complexity 4 (> max enabled 2) (revive)
testdata-revive/empty-lines.go:135:1: cyclomatic: function x has cyclomatic complexity 4 (revive)
testdata-revive/error-naming.go:6:5: error-naming: error var eNew should have name of the form errFoo (revive)
testdata-revive/error-naming.go:6:23: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)
testdata-revive/error-return.go:4:1: error-return: error should be the last type when returning multiple items (revive)
testdata-revive/error-strings.go:6:25: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)
testdata-revive/error-strings.go:9:20: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)
testdata-revive/errorf.go:9:15: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)
testdata-revive/exported.go:5: line-length-limit: line is 105 characters, out of limit 80 (revive)
testdata-revive/exported.go:8: line-length-limit: line is 165 characters, out of limit 80 (revive)
testdata-revive/exported.go:8:6: exported: func name will be used as testdata.TestdataRepetitive by other packages, and that is repetitive; consider calling this Repetitive (revive)
testdata-revive/exported.go:10: line-length-limit: line is 87 characters, out of limit 80 (revive)
testdata-revive/exported.go:13: line-length-limit: line is 87 characters, out of limit 80 (revive)
testdata-revive/exported.go:14:7: unused-receiver: method receiver 'p' is not referenced in method's body, consider removing or renaming it as _ (revive)
testdata-revive/file-header.go:2:1: file-header: the file doesn't have an appropriate header (revive)
testdata-revive/flag-parameter.go:4:9: flag-parameter: parameter 'a' seems to be a control flag, avoid control coupling (revive)
testdata-revive/flag-parameter.go:4: line-length-limit: line is 101 characters, out of limit 80 (revive)
testdata-revive/flag-parameter.go:9:6: confusing-naming: Method 'foo' differs only by capitalization to function 'foo' in the same source file (revive)
testdata-revive/function-length.go:10: line-length-limit: line is 106 characters, out of limit 80 (revive)
testdata-revive/function-length.go:18:1: cognitive-complexity: function funLengthB has cognitive complexity 13 (> max enabled 2) (revive)
testdata-revive/function-length.go:18:1: cyclomatic: function funLengthB has cyclomatic complexity 8 (revive)
testdata-revive/function-length.go:18: line-length-limit: line is 170 characters, out of limit 80 (revive)
testdata-revive/function-length.go:18:1: function-length: maximum number of statements per function exceeded; max 10 but got 14 (revive)
testdata-revive/function-length.go:18:17: unused-parameter: parameter 'file' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/function-length.go:18:33: unused-parameter: parameter 'fset' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/function-length.go:18:54: unused-parameter: parameter 'lineLimit' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/function-length.go:18:65: unused-parameter: parameter 'stmtLimit' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/function-length.go:35:4: empty-lines: extra empty line at the end of a block (revive)
testdata-revive/function-length.go:44:1: cyclomatic: function funLengthC has cyclomatic complexity 9 (revive)
testdata-revive/function-length.go:44:1: cognitive-complexity: function funLengthC has cognitive complexity 3 (> max enabled 2) (revive)
testdata-revive/function-length.go:44: line-length-limit: line is 115 characters, out of limit 80 (revive)
testdata-revive/function-length.go:44:1: function-length: maximum number of statements per function exceeded; max 10 but got 12 (revive)
testdata-revive/function-length.go:74: line-length-limit: line is 114 characters, out of limit 80 (revive)
testdata-revive/function-result-limit.go:4: line-length-limit: line is 108 characters, out of limit 80 (revive)
testdata-revive/function-result-limit.go:4:1: function-result-limit: maximum number of return results per function exceeded; max 2 but got 4 (revive)
testdata-revive/function-result-limit.go:8:10: unused-parameter: parameter 'a' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/function-result-limit.go:8:13: unused-parameter: parameter 'b' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/function-result-limit.go:11:10: unused-parameter: parameter 'a' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/function-result-limit.go:11:20: unused-parameter: parameter 'b' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/function-result-limit.go:14: line-length-limit: line is 130 characters, out of limit 80 (revive)
testdata-revive/function-result-limit.go:14:1: confusing-results: unnamed results of the same type may be confusing, consider using named results (revive)
testdata-revive/function-result-limit.go:14:1: function-result-limit: maximum number of return results per function exceeded; max 2 but got 5 (revive)
testdata-revive/get-return.go:7:1: get-return: function 'getBar' seems to be a getter but it does not return any result (revive)
testdata-revive/get-return.go:7: line-length-limit: line is 107 characters, out of limit 80 (revive)
testdata-revive/get-return.go:16:7: unused-receiver: method receiver 't' is not referenced in method's body, consider removing or renaming it as _ (revive)
testdata-revive/get-return.go:19:1: get-return: function 'GetSaz' seems to be a getter but it does not return any result (revive)
testdata-revive/get-return.go:19:7: unused-receiver: method receiver 't' is not referenced in method's body, consider removing or renaming it as _ (revive)
testdata-revive/get-return.go:19: line-length-limit: line is 121 characters, out of limit 80 (revive)
testdata-revive/get-return.go:22:1: argument-limit: maximum number of arguments per function exceeded; max 3 but got 5 (revive)
testdata-revive/get-return.go:22:1: get-return: function 'GetQux' seems to be a getter but it does not return any result (revive)
testdata-revive/get-return.go:22:30: unused-parameter: parameter 'c' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/get-return.go:22:37: unused-parameter: parameter 'd' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/get-return.go:22:47: unused-parameter: parameter 'e' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/get-return.go:22: line-length-limit: line is 140 characters, out of limit 80 (revive)
testdata-revive/identical-branches.go:4:1: cognitive-complexity: function identicalBranches has cognitive complexity 8 (> max enabled 2) (revive)
testdata-revive/identical-branches.go:4:1: function-length: maximum number of statements per function exceeded; max 10 but got 15 (revive)
testdata-revive/identical-branches.go:4:1: cyclomatic: function identicalBranches has cyclomatic complexity 8 (revive)
testdata-revive/identical-branches.go:5:2: identical-branches: both branches of the if are identical (revive)
testdata-revive/identical-branches.go:17:2: identical-branches: both branches of the if are identical (revive)
testdata-revive/identical-branches.go:24:3: identical-branches: both branches of the if are identical (revive)
testdata-revive/if-return.go:9:3: unhandled-error: Unhandled error in call to function g (revive)
testdata-revive/if-return.go:16: line-length-limit: line is 105 characters, out of limit 80 (revive)
testdata-revive/if-return.go:16:2: if-return: redundant if ...; err != nil check, just return error instead. (revive)
testdata-revive/if-return.go:54:1: cognitive-complexity: function l has cognitive complexity 3 (> max enabled 2) (revive)
testdata-revive/if-return.go:54:1: cyclomatic: function l has cyclomatic complexity 4 (revive)
testdata-revive/if-return.go:68:1: cyclomatic: function m has cyclomatic complexity 4 (revive)
testdata-revive/if-return.go:68:1: cognitive-complexity: function m has cognitive complexity 3 (> max enabled 2) (revive)
testdata-revive/if-return.go:82:1: cognitive-complexity: function multi has cognitive complexity 5 (> max enabled 2) (revive)
testdata-revive/if-return.go:82:1: cyclomatic: function multi has cyclomatic complexity 4 (revive)
testdata-revive/if-return.go:82:1: function-length: maximum number of statements per function exceeded; max 10 but got 13 (revive)
testdata-revive/if-return.go:89: line-length-limit: line is 109 characters, out of limit 80 (revive)
testdata-revive/if-return.go:89:3: if-return: redundant if ...; err != nil check, just return error instead. (revive)
testdata-revive/if-return.go:92:3: unreachable-code: unreachable code after this statement (revive)
testdata-revive/if-return.go:96:3: if-return: redundant if ...; err != nil check, just return error instead. (revive)
testdata-revive/if-return.go:96: line-length-limit: line is 108 characters, out of limit 80 (revive)
testdata-revive/if-return.go:99:3: unreachable-code: unreachable code after this statement (revive)
testdata-revive/import-shadowing.go:6:2: blank-imports: a blank import should be only in a main or test package, or have a comment justifying it (revive)
testdata-revive/import-shadowing.go:20:7: import-shadowing: The name 'ast' shadows an import name (revive)
testdata-revive/import-shadowing.go:20:7: unused-receiver: method receiver 'ast' is not referenced in method's body, consider removing or renaming it as _ (revive)
testdata-revive/imports-blacklist.go:6:2: imports-blacklist: should not use the following blacklisted import: "crypto/md5" (revive)
testdata-revive/increment-decrement.go:6:2: increment-decrement: should replace i += 1 with i++ (revive)
testdata-revive/indent-error-flow.go:7:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary) (revive)
testdata-revive/line-length-limit.go:11: line-length-limit: line is 86 characters, out of limit 80 (revive)
testdata-revive/line-length-limit.go:17:2: unhandled-error: Unhandled error in call to function fmt.Println (revive)
testdata-revive/max-public-structs.go:3:1: max-public-structs: you have exceeded the maximum number of public struct declarations (revive)
testdata-revive/max-public-structs.go:3: line-length-limit: line is 94 characters, out of limit 80 (revive)
testdata-revive/modifies-parameter.go:11:3: modifies-parameter: parameter 'b' seems to be modified (revive)
testdata-revive/modifies-value-receiver.go:9:2: modifies-value-receiver: suspicious assignment to a by-value method receiver (revive)
testdata-revive/nested-structs.go:2:1: max-public-structs: you have exceeded the maximum number of public struct declarations (revive)
testdata-revive/nested-structs.go:5:2: nested-structs: no nested structs are allowed (revive)
testdata-revive/nested-structs.go:6:3: nested-structs: no nested structs are allowed (revive)
testdata-revive/nested-structs.go:8:4: nested-structs: no nested structs are allowed (revive)
testdata-revive/package-comments.go:3:1: file-header: the file doesn't have an appropriate header (revive)
testdata-revive/range-val-address.go:9: line-length-limit: line is 124 characters, out of limit 80 (revive)
testdata-revive/range-val-address.go:9:18: range-val-address: suspicious assignment of 'value'. range-loop variables always have the same address (revive)
testdata-revive/range-val-address.go:27:8: range-val-address: suspicious assignment of 'value'. range-loop variables always have the same address (revive)
testdata-revive/range-val-address.go:27: line-length-limit: line is 114 characters, out of limit 80 (revive)
testdata-revive/range-val-address.go:35:22: add-constant: string literal "A" appears, at least, 4 times, create a named constant for it (revive)
testdata-revive/range-val-address.go:35:27: add-constant: string literal "B" appears, at least, 4 times, create a named constant for it (revive)
testdata-revive/range-val-address.go:35:32: add-constant: string literal "C" appears, at least, 4 times, create a named constant for it (revive)
testdata-revive/range-val-address.go:37:7: range-val-address: suspicious assignment of 'value'. range-loop variables always have the same address (revive)
testdata-revive/range-val-address.go:37: line-length-limit: line is 124 characters, out of limit 80 (revive)
testdata-revive/range-val-address.go:46: line-length-limit: line is 120 characters, out of limit 80 (revive)
testdata-revive/range-val-address.go:58: line-length-limit: line is 127 characters, out of limit 80 (revive)
testdata-revive/range-val-address.go:69: line-length-limit: line is 127 characters, out of limit 80 (revive)
testdata-revive/range-val-address.go:103: line-length-limit: line is 89 characters, out of limit 80 (revive)
testdata-revive/range-val-address.go:125:39: add-constant: string literal "a" appears, at least, 4 times, create a named constant for it (revive)
testdata-revive/range-val-address.go:125:55: add-constant: string literal "b" appears, at least, 4 times, create a named constant for it (revive)
testdata-revive/range-val-address.go:125:71: add-constant: string literal "c" appears, at least, 4 times, create a named constant for it (revive)
testdata-revive/range-val-in-closure.go:6:1: function-length: maximum number of statements per function exceeded; max 10 but got 20 (revive)
testdata-revive/range-val-in-closure.go:6:1: cyclomatic: function foo has cyclomatic complexity 5 (revive)
testdata-revive/range-val-in-closure.go:6:1: cognitive-complexity: function foo has cognitive complexity 8 (> max enabled 2) (revive)
testdata-revive/range-val-in-closure.go:10: line-length-limit: line is 100 characters, out of limit 80 (revive)
testdata-revive/range-val-in-closure.go:10:30: range-val-in-closure: loop variable index captured by func literal (revive)
testdata-revive/range-val-in-closure.go:11:30: range-val-in-closure: loop variable value captured by func literal (revive)
testdata-revive/range-val-in-closure.go:11: line-length-limit: line is 100 characters, out of limit 80 (revive)
testdata-revive/range-val-in-closure.go:18:16: add-constant: avoid magic numbers like '3', create a named constant for it (revive)
testdata-revive/range-val-in-closure.go:20:3: defer: prefer not to defer inside loops (revive)
testdata-revive/range-val-in-closure.go:21: line-length-limit: line is 98 characters, out of limit 80 (revive)
testdata-revive/range-val-in-closure.go:21:30: range-val-in-closure: loop variable key captured by func literal (revive)
testdata-revive/range-val-in-closure.go:22:30: range-val-in-closure: loop variable value captured by func literal (revive)
testdata-revive/range-val-in-closure.go:22: line-length-limit: line is 100 characters, out of limit 80 (revive)
testdata-revive/range-val-in-closure.go:28: line-length-limit: line is 91 characters, out of limit 80 (revive)
testdata-revive/range-val-in-closure.go:28:29: range-val-in-closure: loop variable i captured by func literal (revive)
testdata-revive/range-val-in-closure.go:35:29: range-val-in-closure: loop variable i captured by func literal (revive)
testdata-revive/range-val-in-closure.go:35: line-length-limit: line is 91 characters, out of limit 80 (revive)
testdata-revive/range.go:5:9: range: should omit 2nd value from range; this loop is equivalent to `for i := range ...` (revive)
testdata-revive/receiver-naming.go:10:1: receiver-naming: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self" (revive)
testdata-revive/receiver-naming.go:11:2: modifies-value-receiver: suspicious assignment to a by-value method receiver (revive)
testdata-revive/receiver-naming.go:11:13: add-constant: avoid magic numbers like '8', create a named constant for it (revive)
testdata-revive/redefines-builtin-id.go:4:1: receiver-naming: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self" (revive)
testdata-revive/redefines-builtin-id.go:4:7: unused-receiver: method receiver 'this' is not referenced in method's body, consider removing or renaming it as _ (revive)
testdata-revive/redefines-builtin-id.go:5:2: redefines-builtin-id: assignment creates a shadow of built-in identifier nil (revive)
testdata-revive/redefines-builtin-id.go:5: line-length-limit: line is 81 characters, out of limit 80 (revive)
testdata-revive/redefines-builtin-id.go:6:2: redefines-builtin-id: assignment modifies built-in identifier iota (revive)
testdata-revive/redefines-builtin-id.go:9:1: redefines-builtin-id: redefinition of the built-in function append (revive)
testdata-revive/redefines-builtin-id.go:9:13: unused-parameter: parameter 'i' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/redefines-builtin-id.go:9:16: unused-parameter: parameter 'j' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/redefines-builtin-id.go:12:1: redefines-builtin-id: redefinition of the built-in type Type (revive)
testdata-revive/redefines-builtin-id.go:14:1: redefines-builtin-id: redefinition of the built-in function delete (revive)
testdata-revive/redefines-builtin-id.go:14:1: cognitive-complexity: function delete has cognitive complexity 3 (> max enabled 2) (revive)
testdata-revive/redefines-builtin-id.go:14: line-length-limit: line is 101 characters, out of limit 80 (revive)
testdata-revive/string-format.go:4:1: file-header: the file doesn't have an appropriate header (revive)
testdata-revive/string-format.go:6:26: unused-parameter: parameter 'a' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/string-format.go:6:29: unused-parameter: parameter 'b' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/string-format.go:9:39: unused-parameter: parameter 'c' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/string-format.go:16:7: unused-receiver: method receiver 's' is not referenced in method's body, consider removing or renaming it as _ (revive)
testdata-revive/string-format.go:16:44: unused-parameter: parameter 'c' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/string-format.go:20:22: string-format: must not start with a capital letter (revive)
testdata-revive/string-format.go:21: line-length-limit: line is 105 characters, out of limit 80 (revive)
testdata-revive/string-format.go:28: line-length-limit: line is 87 characters, out of limit 80 (revive)
testdata-revive/string-of-int.go:5:1: max-public-structs: you have exceeded the maximum number of public struct declarations (revive)
testdata-revive/string-of-int.go:25: line-length-limit: line is 93 characters, out of limit 80 (revive)
testdata-revive/string-of-int.go:25:6: string-of-int: dubious convertion of an integer into a string, use strconv.Itoa (revive)
testdata-revive/string-of-int.go:28: line-length-limit: line is 96 characters, out of limit 80 (revive)
testdata-revive/string-of-int.go:28:6: string-of-int: dubious convertion of an integer into a string, use strconv.Itoa (revive)
testdata-revive/string-of-int.go:29:6: string-of-int: dubious convertion of an integer into a string, use strconv.Itoa (revive)
testdata-revive/string-of-int.go:29: line-length-limit: line is 96 characters, out of limit 80 (revive)
testdata-revive/string-of-int.go:30: line-length-limit: line is 96 characters, out of limit 80 (revive)
testdata-revive/struct-tag.go:10: line-length-limit: line is 129 characters, out of limit 80 (revive)
testdata-revive/struct-tag.go:10:35: struct-tag: field's type and default value's type mismatch (revive)
testdata-revive/struct-tag.go:13: line-length-limit: line is 131 characters, out of limit 80 (revive)
testdata-revive/struct-tag.go:13:35: struct-tag: field's type and default value's type mismatch (revive)
testdata-revive/struct-tag.go:16:35: struct-tag: field's type and default value's type mismatch (revive)
testdata-revive/struct-tag.go:16: line-length-limit: line is 132 characters, out of limit 80 (revive)
testdata-revive/struct-tag.go:18: line-length-limit: line is 126 characters, out of limit 80 (revive)
testdata-revive/struct-tag.go:18:35: struct-tag: required should be 'true' or 'false' (revive)
testdata-revive/struct-tag.go:23:2: struct-tag: tag on not-exported field optionalQuery (revive)
testdata-revive/struct-tag.go:23:2: confusing-naming: Field 'optionalQuery' differs only by capitalization to other field in the struct type decodeAndValidateRequest (revive)
testdata-revive/struct-tag.go:26:18: struct-tag: option can not be empty in JSON tag (revive)
testdata-revive/struct-tag.go:26: line-length-limit: line is 82 characters, out of limit 80 (revive)
testdata-revive/struct-tag.go:30: line-length-limit: line is 85 characters, out of limit 80 (revive)
testdata-revive/struct-tag.go:30:20: struct-tag: unknown option 'inline' in JSON tag (revive)
testdata-revive/struct-tag.go:32:27: struct-tag: unknown option 'flow' in JSON tag (revive)
testdata-revive/struct-tag.go:33:27: struct-tag: unknown option 'inline' in JSON tag (revive)
testdata-revive/struct-tag.go:39:27: struct-tag: unknown option 'flow' in BSON tag (revive)
testdata-revive/struct-tag.go:39: line-length-limit: line is 93 characters, out of limit 80 (revive)
testdata-revive/struct-tag.go:48:20: struct-tag: duplicated tag number 0 (revive)
testdata-revive/struct-tag.go:48: line-length-limit: line is 99 characters, out of limit 80 (revive)
testdata-revive/struct-tag.go:49:20: struct-tag: unknown option 'other' in ASN1 tag (revive)
testdata-revive/struct-tag.go:49: line-length-limit: line is 110 characters, out of limit 80 (revive)
testdata-revive/struct-tag.go:58: line-length-limit: line is 89 characters, out of limit 80 (revive)
testdata-revive/struct-tag.go:59:50: struct-tag: unknown option 'other' in XML tag (revive)
testdata-revive/struct-tag.go:59: line-length-limit: line is 128 characters, out of limit 80 (revive)
testdata-revive/superfluous-else.go:13:1: cognitive-complexity: function h has cognitive complexity 3 (> max enabled 2) (revive)
testdata-revive/superfluous-else.go:18: line-length-limit: line is 171 characters, out of limit 80 (revive)
testdata-revive/superfluous-else.go:18:10: superfluous-else: if block ends with a continue statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary) (revive)
testdata-revive/superfluous-else.go:24:1: cognitive-complexity: function i has cognitive complexity 3 (> max enabled 2) (revive)
testdata-revive/superfluous-else.go:29:10: superfluous-else: if block ends with a continue statement, so drop this else and outdent its block (revive)
testdata-revive/superfluous-else.go:37:1: cognitive-complexity: function j has cognitive complexity 3 (> max enabled 2) (revive)
testdata-revive/superfluous-else.go:41:10: superfluous-else: if block ends with a break statement, so drop this else and outdent its block (revive)
testdata-revive/superfluous-else.go:49:1: cognitive-complexity: function k has cognitive complexity 4 (> max enabled 2) (revive)
testdata-revive/superfluous-else.go:53:10: add-constant: avoid magic numbers like '20', create a named constant for it (revive)
testdata-revive/superfluous-else.go:54:11: add-constant: avoid magic numbers like '15', create a named constant for it (revive)
testdata-revive/superfluous-else.go:57:10: superfluous-else: if block ends with a goto statement, so drop this else and outdent its block (revive)
testdata-revive/superfluous-else.go:57: line-length-limit: line is 104 characters, out of limit 80 (revive)
testdata-revive/superfluous-else.go:64:1: cognitive-complexity: function j has cognitive complexity 3 (> max enabled 2) (revive)
testdata-revive/superfluous-else.go:64:6: confusing-naming: Method 'j' differs only by capitalization to function 'j' in the same source file (revive)
testdata-revive/superfluous-else.go:80:3: deep-exit: calls to log.Fatal only in main() or init() functions (revive)
testdata-revive/superfluous-else.go:81:9: superfluous-else: if block ends with call to log.Fatal function, so drop this else and outdent its block (revive)
testdata-revive/superfluous-else.go:82:14: add-constant: string literal "non-positive" appears, at least, 4 times, create a named constant for it (revive)
testdata-revive/superfluous-else.go:84:9: add-constant: string literal "ok" appears, at least, 4 times, create a named constant for it (revive)
testdata-revive/superfluous-else.go:90:3: deep-exit: calls to log.Fatalf only in main() or init() functions (revive)
testdata-revive/superfluous-else.go:91:9: superfluous-else: if block ends with call to log.Fatalf function, so drop this else and outdent its block (revive)
testdata-revive/superfluous-else.go:91: line-length-limit: line is 111 characters, out of limit 80 (revive)
testdata-revive/superfluous-else.go:100:3: deep-exit: calls to log.Fatalln only in main() or init() functions (revive)
testdata-revive/superfluous-else.go:101:9: superfluous-else: if block ends with call to log.Fatalln function, so drop this else and outdent its block (revive)
testdata-revive/superfluous-else.go:101: line-length-limit: line is 112 characters, out of limit 80 (revive)
testdata-revive/superfluous-else.go:110:3: deep-exit: calls to os.Exit only in main() or init() functions (revive)
testdata-revive/superfluous-else.go:111:9: superfluous-else: if block ends with call to os.Exit function, so drop this else and outdent its block (revive)
testdata-revive/superfluous-else.go:120:3: deep-exit: calls to log.Panic only in main() or init() functions (revive)
testdata-revive/superfluous-else.go:121:9: superfluous-else: if block ends with call to log.Panic function, so drop this else and outdent its block (revive)
testdata-revive/superfluous-else.go:130:3: deep-exit: calls to log.Panicf only in main() or init() functions (revive)
testdata-revive/superfluous-else.go:131: line-length-limit: line is 111 characters, out of limit 80 (revive)
testdata-revive/superfluous-else.go:131:9: superfluous-else: if block ends with call to log.Panicf function, so drop this else and outdent its block (revive)
testdata-revive/superfluous-else.go:140:3: deep-exit: calls to log.Panicln only in main() or init() functions (revive)
testdata-revive/superfluous-else.go:141:9: superfluous-else: if block ends with call to log.Panicln function, so drop this else and outdent its block (revive)
testdata-revive/superfluous-else.go:141: line-length-limit: line is 112 characters, out of limit 80 (revive)
testdata-revive/superfluous-else.go:148:1: cognitive-complexity: function noreg_19 has cognitive complexity 6 (> max enabled 2) (revive)
testdata-revive/superfluous-else.go:148:1: cyclomatic: function noreg_19 has cyclomatic complexity 4 (revive)
testdata-revive/superfluous-else.go:148:6: var-naming: don't use underscores in Go names; func noreg_19 should be noreg19 (revive)
testdata-revive/superfluous-else.go:148:30: unused-parameter: parameter 'x' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/superfluous-else.go:154:3: deep-exit: calls to os.Exit only in main() or init() functions (revive)
testdata-revive/time-naming.go:7:2: time-naming: var fiveMins is of type time.Duration; don't use unit-specific suffix "Mins" (revive)
testdata-revive/time-naming.go:8:2: time-naming: var TenHours is of type time.Duration; don't use unit-specific suffix "Hours" (revive)
testdata-revive/time-naming.go:9:2: time-naming: var TenSec is of type time.Duration; don't use unit-specific suffix "Sec" (revive)
testdata-revive/unconditional-recursion.go:11:2: unconditional-recursion: unconditional recursive call (revive)
testdata-revive/unconditional-recursion.go:14:1: cyclomatic: function ur1bis has cyclomatic complexity 5 (revive)
testdata-revive/unconditional-recursion.go:14:1: cognitive-complexity: function ur1bis has cognitive complexity 6 (> max enabled 2) (revive)
testdata-revive/unconditional-recursion.go:28:2: unconditional-recursion: unconditional recursive call (revive)
testdata-revive/unconditional-recursion.go:50:1: cognitive-complexity: function urn4 has cognitive complexity 3 (> max enabled 2) (revive)
testdata-revive/unconditional-recursion.go:72:6: confusing-naming: Method 'ur2tris' differs only by capitalization to function 'ur2tris' in the same source file (revive)
testdata-revive/unconditional-recursion.go:163:3: deep-exit: calls to log.Panic only in main() or init() functions (revive)
testdata-revive/unconditional-recursion.go:170:3: deep-exit: calls to log.Panic only in main() or init() functions (revive)
testdata-revive/unexported-naming.go:10:2: unused-parameter: parameter 'S' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/unexported-naming.go:10:2: unexported-naming: the symbol S is local, its name should start with a lowercase letter (revive)
testdata-revive/unexported-naming.go:10: line-length-limit: line is 90 characters, out of limit 80 (revive)
testdata-revive/unexported-naming.go:11:2: unused-parameter: parameter 's' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/unexported-naming.go:13: line-length-limit: line is 101 characters, out of limit 80 (revive)
testdata-revive/unexported-naming.go:13:2: unexported-naming: the symbol Result is local, its name should start with a lowercase letter (revive)
testdata-revive/unexported-naming.go:16:6: unexported-naming: the symbol NotExportable is local, its name should start with a lowercase letter (revive)
testdata-revive/unexported-naming.go:16: line-length-limit: line is 117 characters, out of limit 80 (revive)
testdata-revive/unexported-naming.go:19:3: unexported-naming: the symbol OtherNotExportable is local, its name should start with a lowercase letter (revive)
testdata-revive/unexported-naming.go:19: line-length-limit: line is 128 characters, out of limit 80 (revive)
testdata-revive/unexported-naming.go:21: line-length-limit: line is 141 characters, out of limit 80 (revive)
testdata-revive/unexported-naming.go:21:8: unexported-naming: the symbol NotExportableConstant is local, its name should start with a lowercase letter (revive)
testdata-revive/unexported-naming.go:23:2: bare-return: avoid using bare returns, please add return expressions (revive)
testdata-revive/unhandled-error.go:15:2: unhandled-error: Unhandled error in call to function unhandledError1 (revive)
testdata-revive/unhandled-error.go:16:2: unhandled-error: Unhandled error in call to function fmt.Fprintf (revive)
testdata-revive/unhandled-error.go:17:2: unhandled-error: Unhandled error in call to function os.Chdir (revive)
testdata-revive/unnecessary-stmt.go:4:1: cognitive-complexity: function bar has cognitive complexity 5 (> max enabled 2) (revive)
testdata-revive/unnecessary-stmt.go:4:1: cyclomatic: function bar has cyclomatic complexity 6 (revive)
testdata-revive/unnecessary-stmt.go:18:4: useless-break: useless break in case clause (WARN: this break statement affects this switch or select statement and not the loop enclosing it) (revive)
testdata-revive/unnecessary-stmt.go:18:4: unnecessary-stmt: omit unnecessary break at the end of case clause (revive)
testdata-revive/unnecessary-stmt.go:27:2: unnecessary-stmt: omit unnecessary return statement (revive)
testdata-revive/unreachable-code.go:11:2: deep-exit: calls to log.Fatalf only in main() or init() functions (revive)
testdata-revive/unreachable-code.go:12: line-length-limit: line is 86 characters, out of limit 80 (revive)
testdata-revive/unreachable-code.go:12:2: unreachable-code: unreachable code after this statement (revive)
testdata-revive/unreachable-code.go:18:2: unhandled-error: Unhandled error in call to function fmt.Println (revive)
testdata-revive/unreachable-code.go:22:3: deep-exit: calls to os.Exit only in main() or init() functions (revive)
testdata-revive/unreachable-code.go:26:2: unhandled-error: Unhandled error in call to function fmt.Println (revive)
testdata-revive/unused-parameter.go:17:2: modifies-parameter: parameter 'param' seems to be modified (revive)
testdata-revive/unused-parameter.go:20:9: unused-parameter: parameter 'param' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/unused-parameter.go:20: line-length-limit: line is 107 characters, out of limit 80 (revive)
testdata-revive/unused-parameter.go:21:5: modifies-parameter: parameter 'param' seems to be modified (revive)
testdata-revive/unused-parameter.go:26:9: unused-parameter: parameter 'param' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/unused-parameter.go:27:9: modifies-parameter: parameter 'param' seems to be modified (revive)
testdata-revive/unused-parameter.go:36: line-length-limit: line is 115 characters, out of limit 80 (revive)
testdata-revive/unused-parameter.go:45:4: modifies-parameter: parameter 'a' seems to be modified (revive)
testdata-revive/unused-parameter.go:51:1: cyclomatic: function f6 has cyclomatic complexity 5 (revive)
testdata-revive/unused-parameter.go:51:9: unused-parameter: parameter 'unused' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/unused-parameter.go:52:9: modifies-parameter: parameter 'unused' seems to be modified (revive)
testdata-revive/unused-parameter.go:60:6: modifies-parameter: parameter 'unused' seems to be modified (revive)
testdata-revive/unused-parameter.go:60:32: modifies-parameter: parameter 'unused' seems to be modified (revive)
testdata-revive/unused-parameter.go:68:1: cyclomatic: function f6bis has cyclomatic complexity 5 (revive)
testdata-revive/unused-parameter.go:84:2: unhandled-error: Unhandled error in call to function fmt.Print (revive)
testdata-revive/unused-parameter.go:92: line-length-limit: line is 89 characters, out of limit 80 (revive)
testdata-revive/unused-parameter.go:92:1: cyclomatic: function getCompareFailCause has cyclomatic complexity 4 (revive)
testdata-revive/unused-parameter.go:99: line-length-limit: line is 99 characters, out of limit 80 (revive)
testdata-revive/unused-parameter.go:103:66: unused-parameter: parameter 'src' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/unused-parameter.go:103: line-length-limit: line is 223 characters, out of limit 80 (revive)
testdata-revive/unused-parameter.go:103:1: cognitive-complexity: function assertSuccess has cognitive complexity 3 (> max enabled 2) (revive)
testdata-revive/unused-parameter.go:103:1: cyclomatic: function assertSuccess has cyclomatic complexity 4 (revive)
testdata-revive/unused-parameter.go:125:1: cognitive-complexity: function (lintCyclomatic).Visit has cognitive complexity 6 (> max enabled 2) (revive)
testdata-revive/unused-parameter.go:125:1: cyclomatic: function (lintCyclomatic).Visit has cyclomatic complexity 4 (revive)
testdata-revive/unused-parameter.go:125: line-length-limit: line is 138 characters, out of limit 80 (revive)
testdata-revive/unused-parameter.go:125:31: unused-parameter: parameter 'n' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/unused-parameter.go:143: line-length-limit: line is 136 characters, out of limit 80 (revive)
testdata-revive/unused-parameter.go:143:23: unused-parameter: parameter 'fr' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/unused-parameter.go:149:2: modifies-parameter: parameter 'id' seems to be modified (revive)
testdata-revive/unused-parameter.go:153:2: modifies-parameter: parameter 'id' seems to be modified (revive)
testdata-revive/unused-parameter.go:157:2: modifies-parameter: parameter 'id' seems to be modified (revive)
testdata-revive/unused-parameter.go:167:9: add-constant: avoid magic numbers like '8', create a named constant for it (revive)
testdata-revive/unused-receiver.go:10:7: unused-receiver: method receiver 'f' is not referenced in method's body, consider removing or renaming it as _ (revive)
testdata-revive/unused-receiver.go:10: line-length-limit: line is 135 characters, out of limit 80 (revive)
testdata-revive/unused-receiver.go:14:7: unused-receiver: method receiver 'f' is not referenced in method's body, consider removing or renaming it as _ (revive)
testdata-revive/unused-receiver.go:14: line-length-limit: line is 194 characters, out of limit 80 (revive)
testdata-revive/unused-receiver.go:21:1: receiver-naming: receiver name u should be consistent with previous receiver name f for Unix (revive)
testdata-revive/unused-receiver.go:21:7: unused-receiver: method receiver 'u' is not referenced in method's body, consider removing or renaming it as _ (revive)
testdata-revive/unused-receiver.go:21: line-length-limit: line is 143 characters, out of limit 80 (revive)
testdata-revive/unused-receiver.go:29:1: receiver-naming: receiver name u should be consistent with previous receiver name f for Unix (revive)
testdata-revive/unused-receiver.go:38:1: receiver-naming: receiver name u should be consistent with previous receiver name f for Unix (revive)
testdata-revive/useless-break.go:11:1: function-length: maximum number of statements per function exceeded; max 10 but got 43 (revive)
testdata-revive/useless-break.go:11:1: cyclomatic: function UselessBreaks has cyclomatic complexity 26 (revive)
testdata-revive/useless-break.go:11:1: cognitive-complexity: function UselessBreaks has cognitive complexity 35 (> max enabled 2) (revive)
testdata-revive/useless-break.go:14:3: useless-break: useless break in case clause (revive)
testdata-revive/useless-break.go:14:3: unnecessary-stmt: omit unnecessary break at the end of case clause (revive)
testdata-revive/useless-break.go:23:3: useless-break: useless break in case clause (revive)
testdata-revive/useless-break.go:36:4: unnecessary-stmt: omit unnecessary break at the end of case clause (revive)
testdata-revive/useless-break.go:36: line-length-limit: line is 156 characters, out of limit 80 (revive)
testdata-revive/useless-break.go:36:4: useless-break: useless break in case clause (WARN: this break statement affects this switch or select statement and not the loop enclosing it) (revive)
testdata-revive/useless-break.go:45: line-length-limit: line is 156 characters, out of limit 80 (revive)
testdata-revive/useless-break.go:45:4: useless-break: useless break in case clause (WARN: this break statement affects this switch or select statement and not the loop enclosing it) (revive)
testdata-revive/useless-break.go:88:3: useless-break: useless break in case clause (revive)
testdata-revive/var-declaration.go:5:8: var-declaration: should omit type int from declaration of var n; it will be inferred from the right-hand side (revive)
testdata-revive/var-naming.go:8:2: var-naming: don't use underscores in Go names; var invalid_name should be invalidName (revive)
testdata-revive/waitgroup-by-value.go:8:1: argument-limit: maximum number of arguments per function exceeded; max 3 but got 4 (revive)
testdata-revive/waitgroup-by-value.go:8: line-length-limit: line is 146 characters, out of limit 80 (revive)
testdata-revive/waitgroup-by-value.go:8:36: waitgroup-by-value: sync.WaitGroup passed by value, the function will get a copy of the original one (revive)
testdata-revive/waitgroup-by-value.go:11:10: waitgroup-by-value: sync.WaitGroup passed by value, the function will get a copy of the original one (revive)
testdata-revive/waitgroup-by-value.go:11: line-length-limit: line is 123 characters, out of limit 80 (revive)
testdata-revive/waitgroup-by-value.go:14:10: unused-parameter: parameter 'zz' seems to be unused, consider removing or renaming it as _ (revive)
testdata-revive/waitgroup-by-value.go:14: line-length-limit: line is 121 characters, out of limit 80 (revive)
testdata-revive/waitgroup-by-value.go:14:10: waitgroup-by-value: sync.WaitGroup passed by value, the function will get a copy of the original one (revive)
testdata-revive/waitgroup-by-value.go:17:9: unused-parameter: parameter 'zz' seems to be unused, consider removing or renaming it as _ (revive)
